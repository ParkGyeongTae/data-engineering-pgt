# Apache Zeppelin 에러 조치 테스트용
name: test-frontend

on:
  workflow_dispatch:

env:
  MAVEN_OPTS: >-
      -Xms1024M -Xmx2048M -XX:MaxMetaspaceSize=1024m -XX:-UseGCOverheadLimit
      -Dhttp.keepAlive=false
      -Dmaven.wagon.http.pool=false
      -Dmaven.wagon.http.retryHandler.count=3
  MAVEN_ARGS: >-
      -B --no-transfer-progress
  ZEPPELIN_HELIUM_REGISTRY: helium
  SPARK_PRINT_LAUNCH_COMMAND: "true"
  SPARK_LOCAL_IP: 127.0.0.1
  ZEPPELIN_LOCAL_IP: 127.0.0.1
  INTERPRETERS: '!hbase,!jdbc,!file,!flink,!cassandra,!elasticsearch,!bigquery,!alluxio,!livy,!groovy,!java,!neo4j,!sparql,!mongodb'

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  test-selenium-with-spark-module-for-spark-3-4:
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tune Runner VM
        uses: ./.github/actions/tune-runner-vm

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/zeppelin/
            ~/.spark-dist
            ~/.cache
          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-zeppelin-

      - name: Setup conda environment with python 3.9 and R
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: python_3_with_R
          environment-file: testing/env_python_3_with_R.yml
          python-version: 3.9
          channels: conda-forge,defaults
          channel-priority: strict
          auto-activate-base: false
          use-mamba: true

      - name: Make IRkernel available to Jupyter
        run: |
          R -e "IRkernel::installspec()"

      - name: Install Environment
        run: |
          ./mvnw clean install -DskipTests -am -pl zeppelin-integration -Pweb-classic -Pintegration -Pspark-scala-2.12 -Pspark-3.4 -Pweb-dist ${MAVEN_ARGS}

      - name: Print Chrome and ChromeDriver version
        run: |
          echo "Chrome version:"
          google-chrome --version || chromium-browser --version || echo "Chrome not found"
          echo "ChromeDriver version:"
          chromedriver --version || echo "ChromeDriver not found"

      - name: Downgrade to Chrome & ChromeDriver 125
        run: |
          set -ex

          # 1. Remove existing Chrome and ChromeDriver (if any)
          sudo apt-get remove -y google-chrome-stable || true
          sudo rm -f /usr/bin/google-chrome /usr/bin/chromedriver

          # 2. Install Chrome 125
          wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/125.0.6422.60/linux64/chrome-linux64.zip
          unzip chrome-linux64.zip
          sudo mv chrome-linux64 /opt/chrome125
          sudo ln -sf /opt/chrome125/chrome /usr/bin/google-chrome

          # 3. Install ChromeDriver 125 (matching version)
          wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/125.0.6422.60/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver

          # 4. Check versions
          google-chrome --version
          chromedriver --version

      - name: run tests
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1600x1024x16" ./mvnw verify -DfailIfNoTests=false -pl zeppelin-integration -Pweb-classic -Pintegration -Pspark-scala-2.12 -Pspark-3.4 -Pweb-dist -Pusing-source-tree ${MAVEN_ARGS}

      - name: Print zeppelin logs
        if: always()
        run: if [ -d "logs" ]; then cat logs/*; fi
