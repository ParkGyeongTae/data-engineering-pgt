# Apache Zeppelin 에러 조치 테스트용
name: test-frontend-run-e2e

on:
  workflow_dispatch:

env:
  MAVEN_OPTS: >-
      -Xms1024M -Xmx2048M -XX:MaxMetaspaceSize=1024m -XX:-UseGCOverheadLimit
      -Dhttp.keepAlive=false
      -Dmaven.wagon.http.pool=false
      -Dmaven.wagon.http.retryHandler.count=3
  MAVEN_ARGS: >-
      -B --no-transfer-progress
  ZEPPELIN_HELIUM_REGISTRY: helium
  SPARK_PRINT_LAUNCH_COMMAND: "true"
  SPARK_LOCAL_IP: 127.0.0.1
  ZEPPELIN_LOCAL_IP: 127.0.0.1
  INTERPRETERS: '!hbase,!jdbc,!file,!flink,!cassandra,!elasticsearch,!bigquery,!alluxio,!livy,!groovy,!java,!neo4j,!sparql,!mongodb'
  
permissions:
  contents: read # to fetch code (actions/checkout)

# jobs:
#   run-e2e-tests-in-zeppelin-web:
#     runs-on: ubuntu-24.04
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Tune Runner VM
#         uses: ./.github/actions/tune-runner-vm
#       - name: Set up JDK 11
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'temurin'
#           java-version: 11
#       - name: Cache local Maven repository
#         uses: actions/cache@v4
#         with:
#           path: |
#             ~/.m2/repository
#             !~/.m2/repository/org/apache/zeppelin/
#             ~/.spark-dist
#             ~/.cache
#           key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
#           restore-keys: |
#             ${{ runner.os }}-zeppelin-
#       - name: Install application
#         run: ./mvnw clean install -DskipTests -am -pl zeppelin-web -Pweb-classic -Pspark-scala-2.12 -Pspark-3.4 -Pweb-dist ${MAVEN_ARGS}
#       - name: Run headless test
#         run: xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" ./mvnw verify -pl zeppelin-web -Pweb-classic -Pspark-scala-2.12 -Pspark-3.4 -Pweb-dist -Pweb-e2e ${MAVEN_ARGS}
#       - name: Print zeppelin logs
#         if: always()
#         run: if [ -d "logs" ]; then cat logs/*; fi

jobs:
  run-e2e-tests-in-zeppelin-web:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tune Runner VM
        uses: ./.github/actions/tune-runner-vm

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/zeppelin/
            ~/.spark-dist
            ~/.cache
          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-zeppelin-

      - name: Build & install all needed (populate ~/.m2)
        run: |
          ./mvnw -B clean install -DskipTests -Pweb-classic -Pspark-scala-2.12 -Pweb-dist -Pweb-keys

      - name: Run headless e2e for zeppelin-web
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" \
            ./mvnw -B verify \
              -pl zeppelin-web \
              -Pweb-classic -Pweb-dist -Pweb-e2e

      - name: Print zeppelin logs
        if: always()
        run: |
          if [ -d "logs" ]; then ls -al logs; cat logs/*; fi
